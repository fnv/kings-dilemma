{"version":3,"sources":["Game.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["HOUSE","VOTE_TYPE","PHASE","turnOrder","chooseNextPlayer","G","house","pass","currentIndex","indexOf","houses","id","nextIndex","length","currentPlayer","splice","leader","currentPhase","Dilemma","setup","currentDilemma","moderator","moderatorAvailable","powerPool","olwyn","name","coins","power","current_bid","current_vote_type","top","left","prestige","crave","color","agendas","achievement1","achievement2","achievement3","story","crann","dualak","solad","blodyn","turn","moveLimit","moves","assignLeader","ctx","INVALID_MOVE","assignModerator","addPower","removePower","addCoin","removeCoin","voteAye","bid","isNaN","Object","keys","find","key","voteNay","passPower","passModerator","newVote","i","resolveAye","numPassers","remainder","share","resolveNay","changeURL","url","endIf","DilemmaBoard","action","this","move","props","el","document","getElementById","parseInt","value","winner","gameover","undefined","div","houseNames","myName","voteDivs","style","width","push","lineHeight","textAlign","onClick","height","border","class","fontSize","setAction","actions","background","sources","resourceType","cloudName","uploadPreset","buttonText","backgroundColor","borderRadius","onSuccess","result","console","log","info","secure_url","onFailure","error","logging","use_filename","card","position","alt","src","React","Component","DilemmaClient","Client","numPlayers","game","board","multiplayer","SocketIO","server","App","playerID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a187eaa.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core'\n\nconst HOUSE = {\n  DUALAK: 1,\n  CRANN: 2,\n  SOLAD: 3,\n  OLWYN: 4,\n  BLODYN: 5,\n}\n\nconst VOTE_TYPE = {\n  AYE: 1,\n  NAY: 2,\n  PASS_POWER: 3,\n  PASS_MODERATOR: 4,\n}\n\nconst PHASE = {\n  VOTE: 1,\n  BOARD: 2,\n}\n\nconst turnOrder = [HOUSE.OLWYN, HOUSE.CRANN, HOUSE.DUALAK, HOUSE.SOLAD, HOUSE.BLODYN ];\n\nfunction chooseNextPlayer (G, house, pass) {\n  const currentIndex = G.turnOrder.indexOf(G.houses[house].id);\n  const nextIndex = (currentIndex + 1) % G.turnOrder.length;\n  G.currentPlayer = G.turnOrder[nextIndex];\n  if (pass) {\n    G.turnOrder.splice(currentIndex, 1);\n  }\n  if (G.currentPlayer === G.leader || G.turnOrder.length < 1) {\n    G.currentPhase = PHASE.BOARD;\n    G.currentPlayer = null;\n    // resolve the vote!\n  }\n  return;\n}\n\nexport const Dilemma = {\n  setup: () => (\n    { \n      currentDilemma: 'https://i.ibb.co/NLJhqKq/Screen-Shot-2021-04-11-at-6-54-35-PM.png',\n      currentPhase: PHASE.VOTE,\n      turnOrder: turnOrder,\n      currentPlayer: HOUSE.OLWYN,\n      leader: HOUSE.OLWYN,\n      moderator: HOUSE.BLODYN,\n      moderatorAvailable: true,\n      powerPool: 3,\n      houses: {\n        olwyn: {\n          name: \"Olwyn\",\n          id: HOUSE.OLWYN,\n          coins: 10,\n          power: 10, // + welfare (AGENDA), + knowledge\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n          prestige: 9,\n          crave: 0,\n          color: 'red',\n          agendas: 'This game, gain points for welfare highest',\n          achievement1: 'Score 2+ points from agendas (0/3)',\n          achievement2: 'Influence is highest (1/3)',\n          achievement3: 'End with 18+ coins (0/4)',\n          story: 'Assert the Dominion of Knowledge Over Spirit',\n        },\n        crann: {\n          name: \"Crann\",\n          id: HOUSE.CRANN,\n          coins: 10,\n          power: 8, // + money, - money (AGENDA)\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n          prestige: 5,\n          crave: 2,\n          color: 'green',\n          agendas: 'This game, lose points if wealth lowest',\n          achievement1: 'Morale is lowest (1/3)',\n          achievement2: 'Influence is highest (1/3)',\n          achievement3: 'Stability is in lower half (1/4)',\n          story: 'Conquer Another Kingdom',\n        },\n        dualak: {\n          name: \"Dualak\",\n          id: HOUSE.DUALAK,\n          coins: 10,\n          power: 9, // + money (AGENDA)\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n          prestige: 4,\n          crave: 2,\n          color: 'purple',\n          agendas: 'This game, gain points if wealth highest',\n          achievement1: 'Stability is in lower half (1/4)',\n          achievement2: 'Influence is lowest (0/3)',\n          achievement3: 'Wealth is lowest (1/3)',\n          story: 'Curse the Royal Family',\n        },\n        solad: {\n          name: \"Solad\",\n          id: HOUSE.SOLAD,\n          coins: 10,\n          power: 8, // - influence (AGENDA), - morale (AGENDA), + knowledge (AGENDA), + knowledge\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n          prestige: 3,\n          crave: 3,\n          color: 'blue',\n          agendas: 'This game, gain points if knowledge highest, lose points if influence or morale lowest',\n          achievement1: 'Morale is lowest (1/3)',\n          achievement2: 'Knowledge is highest (1/3)',\n          achievement3: 'Score 2+ points from agendas (0/3)',\n          story: 'Find a New Perspective on Reality',\n        },\n        blodyn: {\n          name: \"Blodyn\",\n          id: HOUSE.BLODYN,\n          coins: 10,\n          power: 9, // + influence (AGENDA)\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n          prestige: 2,\n          crave: 1,\n          color: 'gold',\n          agendas: 'This game, gain points if influence highest',\n          achievement1: 'Balance is between 5 and 13, inclusive (1/5)',\n          achievement2: 'Morale is highest (0/3)',\n          achievement3: 'Knowledge is highest (1/3)',\n          story: 'Find Harmony Between Knowledge and Spirit',\n        },\n      }\n    }\n  ),\n\n  turn: {\n      moveLimit: 1,\n  },\n\n  /*\n  moves:\n  - voteAye\n  - increaseAye\n  - holdAye\n  - voteNay\n  - increaseNay\n  - holdNay\n  - votePassPower\n  - votePassModerator\n  - undo\n  */\n  moves: {\n    assignLeader: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.leader = G.houses[house].id;\n    },\n    assignModerator: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.moderator = G.houses[house].id;\n    },\n    addPower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      // TODO add max/min\n      G.houses[house].power = G.houses[house].power + 1;\n    },\n    removePower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].power = G.houses[house].power - 1;\n    },\n    addCoin: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].coins = G.houses[house].coins + 1;\n    },\n    removeCoin: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].coins = G.houses[house].coins - 1;\n    },\n    voteAye: (G, ctx, house, bid) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(isNaN(bid) || bid < 0) {\n        return INVALID_MOVE;\n      }\n      if(G.houses[house].current_bid + bid > G.houses[house].power) {\n        return INVALID_MOVE;\n      }\n      // condition for \"passing\" after a bid\n      G.houses[house].current_vote_type = VOTE_TYPE.AYE;\n      G.houses[house].current_bid = G.houses[house].current_bid + bid;\n      let leader = G.houses[Object.keys(G.houses).find((key) => (G.houses[key].id === G.leader))];\n      if (G.houses[house].current_bid > leader.current_bid) {\n        G.leader = G.houses[house].id;\n      }\n      chooseNextPlayer(G, house);\n    },\n    voteNay: (G, ctx, house, bid) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(isNaN(bid) || bid < 0) {\n        return INVALID_MOVE;\n      }\n      if(G.houses[house].current_bid + bid > G.houses[house].power) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.NAY;\n      G.houses[house].current_bid = G.houses[house].current_bid + bid;\n      let leader = G.houses[Object.keys(G.houses).find((key) => (G.houses[key].id === G.leader))];\n      if (G.houses[house].current_bid > leader.current_bid) {\n        G.leader = G.houses[house].id;\n      }\n      chooseNextPlayer(G, house);\n      \n    },\n    passPower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.PASS_POWER;\n      chooseNextPlayer(G, house, true);\n    },\n    passModerator: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(!G.moderatorAvailable) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.PASS_MODERATOR;\n      G.moderator = G.houses[house].id;\n      G.moderatorAvailable = false;\n      chooseNextPlayer(G, house, true);\n    },\n    newVote: (G, ctx) => {\n      G.currentPhase = PHASE.VOTE;\n      G.currentPlayer = G.leader;\n      let keys = Object.keys(G.houses);\n      for(let i = 0; i < keys.length; i++) {\n        G.houses[keys[i]].current_vote_type = null;\n        G.houses[keys[i]].current_bid = null;\n      }\n      G.moderatorAvailable = true;\n      G.turnOrder = turnOrder;\n    },\n    resolveAye: (G, ctx) => {\n      let keys = Object.keys(G.houses);\n      var numPassers = 0;\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n          numPassers = numPassers + 1;\n        }\n      }\n      const remainder = G.powerPool % numPassers;\n      if (remainder < G.powerPool) {\n        let share = (G.powerPool - remainder) / numPassers;\n        for(let i = 0; i < keys.length; i++) {\n          if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n            G.houses[keys[i]].power = G.houses[keys[i]].power + share;\n          }\n        }\n        G.powerPool = remainder;\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.AYE) {\n          G.powerPool = G.powerPool + G.houses[keys[i]].current_bid;\n          G.houses[keys[i]].power = G.houses[keys[i]].power - G.houses[keys[i]].current_bid;\n        }\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_MODERATOR || G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER ) {\n          G.houses[keys[i]].coins = G.houses[keys[i]].coins + 1;\n        }\n      }\n      // leader reassignment if leader is a nay -- do this manually?\n    },\n    resolveNay: (G, ctx) => {\n      let keys = Object.keys(G.houses);\n      var numPassers = 0;\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n          numPassers = numPassers + 1;\n        }\n      }\n      const remainder = G.powerPool % numPassers;\n      if (remainder < G.powerPool) {\n        let share = (G.powerPool - remainder) / numPassers;\n        for(let i = 0; i < keys.length; i++) {\n          if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n            G.houses[keys[i]].power = G.houses[keys[i]].power + share;\n          }\n        }\n        G.powerPool = remainder;\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.NAY) {\n          G.powerPool = G.powerPool + G.houses[keys[i]].current_bid;\n          G.houses[keys[i]].power = G.houses[keys[i]].power - G.houses[keys[i]].current_bid;\n        }\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_MODERATOR || G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER ) {\n          G.houses[keys[i]].coins = G.houses[keys[i]].coins + 1;\n        }\n      }\n    },\n    changeURL: (G, ctx, url) => {\n      G.currentDilemma = url;\n    }\n  },\n\n  endIf: (G, ctx) => {\n    // no victory condition, we can just stop running the simulator\n    // if (IsVictory(G.cells)) {\n    //   return { winner: ctx.currentPlayer };\n    // }\n    // if (IsDraw(G.cells)) {\n    //   return { draw: true };\n    // }\n    // total agents, total incidents!!!\n  },\n};","import React from 'react';\nimport { GiMeeple } from \"react-icons/gi\";\nimport { WidgetLoader, Widget } from 'react-cloudinary-upload-widget'\n\nexport class DilemmaBoard extends React.Component {\n\n  action = null\n\n  setAction(action) {\n    this.action = action;\n  };\n\n  onClick(house) {\n    let move = this.action;\n    if (move === 'assignLeader') {\n      this.props.moves.assignLeader(house);\n    }\n    if (move === 'assignModerator') {\n      this.props.moves.assignModerator(house);\n    }\n    if (move === 'addPower') {\n      this.props.moves.addPower(house);\n    }\n    if (move === 'removePower') {\n      this.props.moves.removePower(house);\n    }\n    if (move === 'addCoin') {\n      this.props.moves.addCoin(house);\n    }\n    if (move === 'removeCoin') {\n      this.props.moves.removeCoin(house);\n    }\n    if (move === 'voteAye') {\n      let el = document.getElementById(house+'-bid');\n      let bid = parseInt(el?.value);\n      this.props.moves.voteAye(house, bid);\n    }\n    if (move === 'voteNay') {\n      let el = document.getElementById(house+'-bid');\n      let bid = parseInt(el?.value);\n      this.props.moves.voteNay(house, bid);\n    }\n    if (move === 'passPower') {\n      this.props.moves.passPower(house);\n    }\n    if (move === 'passModerator') {\n      this.props.moves.passModerator(house);\n    }\n    this.action = null;\n  }\n\n  render() {\n    let winner = '';\n    if (this.props.ctx.gameover) {\n      winner = \n        this.props.ctx.gameover.winner !== undefined ? (\n          <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n        ) : (\n          <div id=\"winner\">Draw!</div>\n        );\n    }\n\n    let div = [];\n    let houseNames = Object.keys(this.props.G.houses);\n\n    for (let i = 0; i < houseNames.length; i++) {\n      let myName = houseNames[i];\n      let voteDivs = [\n        // aye\n        <div>AYE: {this.props.G.houses[myName].current_bid}<br/>\n          <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>\n        </div>,\n        // nay\n        <div>NAY: {this.props.G.houses[myName].current_bid}<br/>\n          <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>\n        </div>,\n        // pass (power)\n        <div>PASS (POWER) </div>,\n        // pass (moderator)\n        <div>PASS (MODERATOR) </div>,\n      ];\n      div.push(\n        <div style={{\n          lineHeight: '14px',\n          textAlign: 'center',\n        }} key={myName} onClick={() => this.onClick(myName)}>\n          <table>\n            <tbody>\n              <tr style={{height:'120px'}}>\n              <td style={{width:'100px', border: '1px solid #555',}}>\n          {myName} <span class='tooltip'><GiMeeple color={this.props.G.houses[myName].color}/><span class='tooltiptext'>Prestige: {this.props.G.houses[myName].prestige}<br/>Crave: {this.props.G.houses[myName].crave}<br/>{this.props.G.houses[myName].agendas}<br/><br/>{this.props.G.houses[myName].achievement1}<br/>{this.props.G.houses[myName].achievement2}<br/>{this.props.G.houses[myName].achievement3}<br/>{this.props.G.houses[myName].story}</span><br/></span>\n          Power: {this.props.G.houses[myName].power} <br/>\n          Coins: {this.props.G.houses[myName].coins} <br/>\n          {(this.props.G.leader === this.props.G.houses[myName].id) ? ('LEADER') : ('')} <br/>\n          {(this.props.G.moderator === this.props.G.houses[myName].id) ? 'MODERATOR' : ''} <br/>\n          {(this.props.G.currentPlayer === this.props.G.houses[myName].id) ? 'CURRENT PLAYER' : ''} <br/>\n          </td>\n          <td  style={{width:'150px'}}>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('voteAye')}>AYE</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('voteNay')}>NAY</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('passPower')}>PASS (POWER)</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('passModerator')}>PASS (MODERATOR)</button><br/>\n          </td>\n          <td  style={{width:'100px', height:'50px', border: '1px solid #555',}}>\n            {this.props.G.houses[myName].current_vote_type ? voteDivs[this.props.G.houses[myName].current_vote_type - 1] : <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>}\n          </td>\n              </tr>\n            </tbody>\n          </table>\n          \n        </div>\n      );\n    }\n\n    let actions = (<div style={{\n      border: '1px solid #555',\n      height: '50px',\n      lineHeight: '10px',\n      textAlign: 'center',\n      background: 'rgba(256, 256, 256, 0.65)',\n    }}>\n      <table >\n        <tbody >\n          <tr>\n            <td >      <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('assignLeader')}>ASSIGN LEADER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('addPower')}>ADD POWER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('addCoin')}>ADD COIN</button><br/>\n\n            </td>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.newVote()}>NEW VOTE</button><br/>\n            </td>\n            <td>\n            {(this.props.G.currentPhase === 2) ? <div>\n                <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.resolveAye()}>AYES HAVE IT</button><br/>\n              </div>\n              : ''\n              }\n            </td>\n            <td>\n            <Widget\n          sources={['camera']}\n          resourceType={'image'}\n          cloudName={'dgqjwmtyf'}\n          uploadPreset={'lowmd5va-dilemma'} // check that an upload preset exists and check mode is signed or unisgned\n          buttonText={'Upload'}\n          style={{\n                color: 'white',\n                border: 'none',\n                width: '120px',\n                backgroundColor: 'green',\n                borderRadius: '4px',\n                height: '20px'\n              }} // inline styling only or style id='cloudinary_upload_button'\n          onSuccess={(result) => {console.log(\"success\", result); this.props.moves.changeURL(result.info.secure_url);}} // add success callback -> returns result\n          onFailure={(error, result) => {console.log(\"failure\", error, result)}} // add failure callback -> returns 'response.error' + 'response.result'\n          logging={false} // logs will be provided for success and failure messages, \n          // set to false for production -> default = true\n          use_filename={false}\n        /><br/>\n\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('assignModerator')}>ASSIGN MODERATOR</button><br/>\n            </td>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('removePower')}>REMOVE POWER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('removeCoin')}>REMOVE COIN</button><br/>\n\n            </td>\n            <td>\n              {this.props.G.currentPhase === 1 ? 'Voting' : 'Vote Closed'}\n              \n            </td>\n            <td>\n            {(this.props.G.currentPhase === 2) ? <div>\n                <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.resolveNay()}>NAYS HAVE IT</button><br/>\n              </div>\n              : ''\n              }\n            </td>\n          </tr>\n          \n        </tbody>\n      </table>\n      \n    </div>);\n    //      <div style={{'width':'2074px','height':'1306px','backgroundImage':'url('+process.env.PUBLIC_URL+'/Dilemmamap.jpeg)'}}>\n\n    let card = <div style={{position:'absolute', top:'80px', left: '400px'}}><div>Current Power Pool: {this.props.G.powerPool}</div><img alt='' style={{width:'400px'}} src={this.props.G.currentDilemma}></img></div>\n\n    return (\n      <div>\n        <WidgetLoader />\n        \n        {actions}\n        {div} \n        {card}       \n        {winner}\n      </div>\n    )\n  }\n}","import { Client } from 'boardgame.io/react';\nimport { Dilemma } from './Game';\nimport { DilemmaBoard } from './Board';\nimport { SocketIO } from 'boardgame.io/multiplayer'\n\nconst DilemmaClient = Client({ numPlayers: 1, game: Dilemma , board: DilemmaBoard, multiplayer: SocketIO({server: true ? 'https://pandemic-legacy0.herokuapp.com' : 'localhost:53954'})});\n\nconst App = () => (\n  <div>\n    <DilemmaClient playerID=\"0\" />\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}