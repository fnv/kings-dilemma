{"version":3,"sources":["Game.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["HOUSE","VOTE_TYPE","PHASE","turnOrder","chooseNextPlayer","G","house","pass","currentIndex","indexOf","houses","id","nextIndex","length","currentPlayer","splice","leader","currentPhase","Dilemma","setup","currentDilemma","moderator","moderatorAvailable","powerPool","crann","name","coins","power","current_bid","current_vote_type","top","left","olwyn","dualak","solad","blodyn","turn","moveLimit","moves","assignLeader","ctx","INVALID_MOVE","assignModerator","addPower","removePower","addCoin","removeCoin","voteAye","bid","isNaN","Object","keys","find","key","voteNay","passPower","passModerator","newVote","i","resolveAye","numPassers","remainder","share","resolveNay","changeURL","url","endIf","DilemmaBoard","action","this","move","props","el","document","getElementById","parseInt","value","winner","gameover","undefined","div","houseNames","myName","voteDivs","style","width","push","lineHeight","textAlign","onClick","height","border","fontSize","setAction","actions","background","newURL","prompt","card","position","alt","src","React","Component","DilemmaClient","Client","numPlayers","game","board","multiplayer","SocketIO","server","App","playerID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6MAEMA,EACI,EADJA,EAEG,EAFHA,EAGG,EAHHA,EAIG,EAJHA,EAKI,EAGJC,EACC,EADDA,EAEC,EAFDA,EAGQ,EAHRA,EAIY,EAGZC,EACE,EADFA,EAEG,EAGHC,EAAY,CAACH,EAAaA,EAAaA,EAAcA,EAAaA,GAExE,SAASI,EAAkBC,EAAGC,EAAOC,GACnC,IAAMC,EAAeH,EAAEF,UAAUM,QAAQJ,EAAEK,OAAOJ,GAAOK,IACnDC,GAAaJ,EAAe,GAAKH,EAAEF,UAAUU,OACnDR,EAAES,cAAgBT,EAAEF,UAAUS,GAC1BL,GACFF,EAAEF,UAAUY,OAAOP,EAAc,GAE/BH,EAAES,gBAAkBT,EAAEW,SACxBX,EAAEY,aAAef,EACjBG,EAAES,cAAgB,MAMf,IAAMI,EAAU,CACrBC,MAAO,iBACL,CACEC,eAAgB,oEAChBH,aAAcf,EACdC,UAAWA,EACXW,cAAed,EACfgB,OAAQhB,EACRqB,UAAWrB,EACXsB,oBAAoB,EACpBC,UAAW,EACXb,OAAQ,CACNc,MAAO,CACLC,KAAM,QACNd,GAAIX,EACJ0B,MAAO,GACPC,MAAO,EACPC,YAAa,KACbC,kBAAmB,KACnBC,IAAK,QACLC,KAAM,QAERC,MAAO,CACLP,KAAM,QACNd,GAAIX,EACJ0B,MAAO,GACPC,MAAO,EACPC,YAAa,KACbC,kBAAmB,KACnBC,IAAK,QACLC,KAAM,QAERE,OAAQ,CACNR,KAAM,SACNd,GAAIX,EACJ0B,MAAO,GACPC,MAAO,EACPC,YAAa,KACbC,kBAAmB,KACnBC,IAAK,QACLC,KAAM,QAERG,MAAO,CACLT,KAAM,QACNd,GAAIX,EACJ0B,MAAO,GACPC,MAAO,EACPC,YAAa,KACbC,kBAAmB,KACnBC,IAAK,QACLC,KAAM,QAERI,OAAQ,CACNV,KAAM,SACNd,GAAIX,EACJ0B,MAAO,GACPC,MAAO,EACPC,YAAa,KACbC,kBAAmB,KACnBC,IAAK,QACLC,KAAM,WAMdK,KAAM,CACFC,UAAW,GAefC,MAAO,CACLC,aAAc,SAAClC,EAAGmC,EAAKlC,GACrB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAETpC,EAAEW,OAASX,EAAEK,OAAOJ,GAAOK,IAE7B+B,gBAAiB,SAACrC,EAAGmC,EAAKlC,GACxB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAETpC,EAAEgB,UAAYhB,EAAEK,OAAOJ,GAAOK,IAEhCgC,SAAU,SAACtC,EAAGmC,EAAKlC,GACjB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAGTpC,EAAEK,OAAOJ,GAAOqB,MAAQtB,EAAEK,OAAOJ,GAAOqB,MAAQ,GAElDiB,YAAa,SAACvC,EAAGmC,EAAKlC,GACpB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAETpC,EAAEK,OAAOJ,GAAOqB,MAAQtB,EAAEK,OAAOJ,GAAOqB,MAAQ,GAElDkB,QAAS,SAACxC,EAAGmC,EAAKlC,GAChB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAETpC,EAAEK,OAAOJ,GAAOoB,MAAQrB,EAAEK,OAAOJ,GAAOoB,MAAQ,GAElDoB,WAAY,SAACzC,EAAGmC,EAAKlC,GACnB,IAAID,EAAEK,OAAOJ,GACX,OAAOmC,IAETpC,EAAEK,OAAOJ,GAAOoB,MAAQrB,EAAEK,OAAOJ,GAAOoB,MAAQ,GAElDqB,QAAS,SAAC1C,EAAGmC,EAAKlC,EAAO0C,GACvB,IAAI3C,EAAEK,OAAOJ,GACX,OAAOmC,IAET,GAAKpC,EAAES,gBAAkBT,EAAEK,OAAOJ,GAAOK,GACvC,OAAO8B,IAET,GAAGQ,MAAMD,IAAQA,EAAM,EACrB,OAAOP,IAET,GAAGpC,EAAEK,OAAOJ,GAAOsB,YAAcoB,EAAM3C,EAAEK,OAAOJ,GAAOqB,MACrD,OAAOc,IAGTpC,EAAEK,OAAOJ,GAAOuB,kBAAoB5B,EACpCI,EAAEK,OAAOJ,GAAOsB,YAAcvB,EAAEK,OAAOJ,GAAOsB,YAAcoB,EAC5D,IAAIhC,EAASX,EAAEK,OAAOwC,OAAOC,KAAK9C,EAAEK,QAAQ0C,MAAK,SAACC,GAAD,OAAUhD,EAAEK,OAAO2C,GAAK1C,KAAON,EAAEW,WAC9EX,EAAEK,OAAOJ,GAAOsB,YAAcZ,EAAOY,cACvCvB,EAAEW,OAASX,EAAEK,OAAOJ,GAAOK,IAE7BP,EAAiBC,EAAGC,IAEtBgD,QAAS,SAACjD,EAAGmC,EAAKlC,EAAO0C,GACvB,IAAI3C,EAAEK,OAAOJ,GACX,OAAOmC,IAET,GAAKpC,EAAES,gBAAkBT,EAAEK,OAAOJ,GAAOK,GACvC,OAAO8B,IAET,GAAGQ,MAAMD,IAAQA,EAAM,EACrB,OAAOP,IAET,GAAGpC,EAAEK,OAAOJ,GAAOsB,YAAcoB,EAAM3C,EAAEK,OAAOJ,GAAOqB,MACrD,OAAOc,IAETpC,EAAEK,OAAOJ,GAAOuB,kBAAoB5B,EACpCI,EAAEK,OAAOJ,GAAOsB,YAAcvB,EAAEK,OAAOJ,GAAOsB,YAAcoB,EAC5D,IAAIhC,EAASX,EAAEK,OAAOwC,OAAOC,KAAK9C,EAAEK,QAAQ0C,MAAK,SAACC,GAAD,OAAUhD,EAAEK,OAAO2C,GAAK1C,KAAON,EAAEW,WAC9EX,EAAEK,OAAOJ,GAAOsB,YAAcZ,EAAOY,cACvCvB,EAAEW,OAASX,EAAEK,OAAOJ,GAAOK,IAE7BP,EAAiBC,EAAGC,IAGtBiD,UAAW,SAAClD,EAAGmC,EAAKlC,GAClB,OAAID,EAAEK,OAAOJ,GAGRD,EAAES,gBAAkBT,EAAEK,OAAOJ,GAAOK,GAChC8B,KAETpC,EAAEK,OAAOJ,GAAOuB,kBAAoB5B,OACpCG,EAAiBC,EAAGC,GAAO,IANlBmC,KAQXe,cAAe,SAACnD,EAAGmC,EAAKlC,GACtB,OAAID,EAAEK,OAAOJ,GAGRD,EAAES,gBAAkBT,EAAEK,OAAOJ,GAAOK,GAChC8B,IAELpC,EAAEiB,oBAGNjB,EAAEK,OAAOJ,GAAOuB,kBAAoB5B,EACpCI,EAAEgB,UAAYhB,EAAEK,OAAOJ,GAAOK,GAC9BN,EAAEiB,oBAAqB,OACvBlB,EAAiBC,EAAGC,GAAO,IALlBmC,IANAA,KAaXgB,QAAS,SAACpD,EAAGmC,GACXnC,EAAES,cAAgBT,EAAEW,OAEpB,IADA,IAAImC,EAAOD,OAAOC,KAAK9C,EAAEK,QACjBgD,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC9BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,kBAAoB,KACtCxB,EAAEK,OAAOyC,EAAKO,IAAI9B,YAAc,KAElCvB,EAAEiB,oBAAqB,EACvBjB,EAAEF,UAAYA,GAEhBwD,WAAY,SAACtD,EAAGmC,GAGd,IAFA,IAAIW,EAAOD,OAAOC,KAAK9C,EAAEK,QACrBkD,EAAa,EACTF,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1C2D,GAA0B,GAG9B,IAAMC,EAAYxD,EAAEkB,UAAYqC,EAChC,GAAIC,EAAYxD,EAAEkB,UAAW,CAE3B,IADA,IAAIuC,GAASzD,EAAEkB,UAAYsC,GAAaD,EAChCF,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1CI,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQmC,GAGxDzD,EAAEkB,UAAYsC,EAEhB,IAAI,IAAIH,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1CI,EAAEkB,UAAYlB,EAAEkB,UAAYlB,EAAEK,OAAOyC,EAAKO,IAAI9B,YAC9CvB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI9B,aAG1E,IAAI,IAAI8B,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,GAA4BI,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC9GI,EAAEK,OAAOyC,EAAKO,IAAIhC,MAAQrB,EAAEK,OAAOyC,EAAKO,IAAIhC,MAAQ,IAK1DqC,WAAY,SAAC1D,EAAGmC,GAGd,IAFA,IAAIW,EAAOD,OAAOC,KAAK9C,EAAEK,QACrBkD,EAAa,EACTF,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1C2D,GAA0B,GAG9B,IAAMC,EAAYxD,EAAEkB,UAAYqC,EAChC,GAAIC,EAAYxD,EAAEkB,UAAW,CAE3B,IADA,IAAIuC,GAASzD,EAAEkB,UAAYsC,GAAaD,EAChCF,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1CI,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQmC,GAGxDzD,EAAEkB,UAAYsC,EAEhB,IAAI,IAAIH,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC1CI,EAAEkB,UAAYlB,EAAEkB,UAAYlB,EAAEK,OAAOyC,EAAKO,IAAI9B,YAC9CvB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI/B,MAAQtB,EAAEK,OAAOyC,EAAKO,IAAI9B,aAG1E,IAAI,IAAI8B,EAAI,EAAGA,EAAIP,EAAKtC,OAAQ6C,IAC1BrD,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,GAA4BI,EAAEK,OAAOyC,EAAKO,IAAI7B,oBAAsB5B,IAC9GI,EAAEK,OAAOyC,EAAKO,IAAIhC,MAAQrB,EAAEK,OAAOyC,EAAKO,IAAIhC,MAAQ,IAI1DsC,UAAW,SAAC3D,EAAGmC,EAAKyB,GAClB5D,EAAEe,eAAiB6C,IAIvBC,MAAO,SAAC7D,EAAGmC,M,4CC3SA2B,EAAb,4MAEEC,OAAS,KAFX,+CAIE,SAAUA,GACRC,KAAKD,OAASA,IALlB,qBAQE,SAAQ9D,GACN,IAAIgE,EAAOD,KAAKD,OAmBhB,GAlBa,iBAATE,GACFD,KAAKE,MAAMjC,MAAMC,aAAajC,GAEnB,oBAATgE,GACFD,KAAKE,MAAMjC,MAAMI,gBAAgBpC,GAEtB,aAATgE,GACFD,KAAKE,MAAMjC,MAAMK,SAASrC,GAEf,gBAATgE,GACFD,KAAKE,MAAMjC,MAAMM,YAAYtC,GAElB,YAATgE,GACFD,KAAKE,MAAMjC,MAAMO,QAAQvC,GAEd,eAATgE,GACFD,KAAKE,MAAMjC,MAAMQ,WAAWxC,GAEjB,YAATgE,EAAoB,CACtB,IAAIE,EAAKC,SAASC,eAAepE,EAAM,QACnC0C,EAAM2B,SAAQ,OAACH,QAAD,IAACA,OAAD,EAACA,EAAII,OACvBP,KAAKE,MAAMjC,MAAMS,QAAQzC,EAAO0C,GAElC,GAAa,YAATsB,EAAoB,CACtB,IAAIE,EAAKC,SAASC,eAAepE,EAAM,QACnC0C,EAAM2B,SAAQ,OAACH,QAAD,IAACA,OAAD,EAACA,EAAII,OACvBP,KAAKE,MAAMjC,MAAMgB,QAAQhD,EAAO0C,GAErB,cAATsB,GACFD,KAAKE,MAAMjC,MAAMiB,UAAUjD,GAEhB,kBAATgE,GACFD,KAAKE,MAAMjC,MAAMkB,cAAclD,GAEjC+D,KAAKD,OAAS,OA5ClB,oBA+CE,WAAU,IAAD,OACHS,EAAS,GACTR,KAAKE,MAAM/B,IAAIsC,WACjBD,OACqCE,IAAnCV,KAAKE,MAAM/B,IAAIsC,SAASD,OACtB,sBAAKlE,GAAG,SAAR,qBAA0B0D,KAAKE,MAAM/B,IAAIsC,SAASD,UAElD,qBAAKlE,GAAG,SAAR,oBAON,IAHA,IAAIqE,EAAM,GACNC,EAAa/B,OAAOC,KAAKkB,KAAKE,MAAMlE,EAAEK,QAZnC,WAcEgD,GACP,IAAIwB,EAASD,EAAWvB,GACpByB,EAAW,CAEb,wCAAW,EAAKZ,MAAMlE,EAAEK,OAAOwE,GAAQtD,YAAY,uBACjD,yCAAW,uBAAOwD,MAAO,CAACC,MAAM,QAAS1E,GAAIuE,EAAS,eAGxD,wCAAW,EAAKX,MAAMlE,EAAEK,OAAOwE,GAAQtD,YAAY,uBACjD,yCAAW,uBAAOwD,MAAO,CAACC,MAAM,QAAS1E,GAAIuE,EAAS,eAGxD,gDAEA,qDAEFF,EAAIM,KACF,qBAAKF,MAAO,CACVG,WAAY,OACZC,UAAW,UACGC,QAAS,kBAAM,EAAKA,QAAQP,IAH5C,SAIE,gCACE,gCACE,qBAAIE,MAAO,CAACM,OAAO,SAAnB,UACA,qBAAIN,MAAO,CAACC,MAAM,QAASM,OAAQ,kBAAnC,mBACGT,EADH,IACW,uBADX,UAEI,EAAKX,MAAMlE,EAAEK,OAAOwE,GAAQvD,MAFhC,IAEuC,uBAFvC,UAGI,EAAK4C,MAAMlE,EAAEK,OAAOwE,GAAQxD,MAHhC,IAGuC,uBACzC,EAAK6C,MAAMlE,EAAEW,SAAW,EAAKuD,MAAMlE,EAAEK,OAAOwE,GAAQvE,GAAO,SAAa,GAJtE,IAI2E,uBAC7E,EAAK4D,MAAMlE,EAAEgB,YAAc,EAAKkD,MAAMlE,EAAEK,OAAOwE,GAAQvE,GAAM,YAAc,GALzE,IAK6E,uBAC/E,EAAK4D,MAAMlE,EAAES,gBAAkB,EAAKyD,MAAMlE,EAAEK,OAAOwE,GAAQvE,GAAM,iBAAmB,GANlF,IAMsF,0BAE1F,qBAAKyE,MAAO,CAACC,MAAM,SAAnB,UACE,wBAAQD,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,YAAhF,iBAAwG,uBACxG,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,YAAhF,iBAAwG,uBACxG,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,cAAhF,0BAAmH,uBACnH,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,kBAAhF,8BAA2H,0BAE7H,oBAAKT,MAAO,CAACC,MAAM,QAASK,OAAO,OAAQC,OAAQ,kBAAnD,SACG,EAAKpB,MAAMlE,EAAEK,OAAOwE,GAAQrD,kBAAoBsD,EAAS,EAAKZ,MAAMlE,EAAEK,OAAOwE,GAAQrD,kBAAoB,GAAK,yCAAW,uBAAOuD,MAAO,CAACC,MAAM,QAAS1E,GAAIuE,EAAS,sBAnBjKA,KApBHxB,EAAI,EAAGA,EAAIuB,EAAWpE,OAAQ6C,IAAM,EAApCA,GAiDT,IAAIoC,EAAW,qBAAKV,MAAO,CACzBO,OAAQ,iBACRD,OAAQ,OACRH,WAAY,OACZC,UAAW,SACXO,WAAY,6BALC,SAOb,gCACE,kCACE,+BACE,wCAAW,wBAAQX,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,iBAAhF,2BAAuH,0BAGlI,+BACA,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,aAAhF,uBAA+G,0BAG/G,+BACA,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,YAAhF,sBAA6G,0BAG7G,+BACA,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKlB,MAAMjC,MAAMmB,WAAlF,sBAA8G,0BAE9G,6BACgC,IAA9BY,KAAKE,MAAMlE,EAAEY,aAAsB,gCACjC,wBAAQmE,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKlB,MAAMjC,MAAMqB,cAAlF,0BAAqH,0BAErH,KAGJ,+BACA,wBAAQyB,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,WACvE,IAAIO,EAASC,OAAO,kCAAmC,uBAEzC,MAAVD,GACF,EAAKzB,MAAMjC,MAAM0B,UAAUgC,IAJjB,0BAO0B,6BAK5B,+BACE,+BACA,wBAAQZ,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,oBAAhF,8BAA6H,0BAE7H,+BACA,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,gBAAhF,0BAAqH,0BAGrH,+BACA,wBAAQT,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKI,UAAU,eAAhF,yBAAmH,0BAGnH,6BACiC,IAA9BxB,KAAKE,MAAMlE,EAAEY,aAAqB,SAAW,gBAGhD,6BACgC,IAA9BoD,KAAKE,MAAMlE,EAAEY,aAAsB,gCACjC,wBAAQmE,MAAO,CAACQ,SAAU,OAAQP,MAAO,QAASI,QAAS,kBAAM,EAAKlB,MAAMjC,MAAMyB,cAAlF,0BAAqH,0BAErH,eAWRmC,EAAO,sBAAKd,MAAO,CAACe,SAAS,WAAYrE,IAAI,OAAQC,KAAM,SAApD,UAA8D,uDAA0BsC,KAAKE,MAAMlE,EAAEkB,aAAgB,qBAAK6E,IAAI,GAAGhB,MAAO,CAACC,MAAM,SAAUgB,IAAKhC,KAAKE,MAAMlE,EAAEe,oBAEtL,OACE,gCACG0E,EACAd,EACAkB,EACArB,SAhMT,GAAkCyB,IAAMC,W,QCAlCC,EAAgBC,YAAO,CAAEC,WAAY,EAAGC,KAAMzF,EAAU0F,MAAOzC,EAAc0C,YAAaC,YAAS,CAACC,OAAe,6CAQ1GC,EANH,kBACV,8BACE,cAACR,EAAD,CAAeS,SAAS,SCGbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASC,eAAe,SAM1BwC,K","file":"static/js/main.7246f81e.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core'\n\nconst HOUSE = {\n  DUALAK: 1,\n  CRANN: 2,\n  SOLAD: 3,\n  OLWYN: 4,\n  BLODYN: 5,\n}\n\nconst VOTE_TYPE = {\n  AYE: 1,\n  NAY: 2,\n  PASS_POWER: 3,\n  PASS_MODERATOR: 4,\n}\n\nconst PHASE = {\n  VOTE: 1,\n  BOARD: 2,\n}\n\nconst turnOrder = [HOUSE.CRANN, HOUSE.OLWYN, HOUSE.DUALAK, HOUSE.SOLAD, HOUSE.BLODYN  ];\n\nfunction chooseNextPlayer (G, house, pass) {\n  const currentIndex = G.turnOrder.indexOf(G.houses[house].id);\n  const nextIndex = (currentIndex + 1) % G.turnOrder.length;\n  G.currentPlayer = G.turnOrder[nextIndex];\n  if (pass) {\n    G.turnOrder.splice(currentIndex, 1);\n  }\n  if (G.currentPlayer === G.leader) {\n    G.currentPhase = PHASE.BOARD;\n    G.currentPlayer = null;\n    // resolve the vote!\n  }\n  return;\n}\n\nexport const Dilemma = {\n  setup: () => (\n    { \n      currentDilemma: 'https://i.ibb.co/NLJhqKq/Screen-Shot-2021-04-11-at-6-54-35-PM.png',\n      currentPhase: PHASE.VOTE,\n      turnOrder: turnOrder,\n      currentPlayer: HOUSE.CRANN,\n      leader: HOUSE.OLWYN,\n      moderator: HOUSE.CRANN,\n      moderatorAvailable: true,\n      powerPool: 3,\n      houses: {\n        crann: {\n          name: \"Crann\",\n          id: HOUSE.CRANN,\n          coins: 10,\n          power: 8,\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n        },\n        olwyn: {\n          name: \"Olwyn\",\n          id: HOUSE.OLWYN,\n          coins: 10,\n          power: 9,\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n        },\n        dualak: {\n          name: \"Dualak\",\n          id: HOUSE.DUALAK,\n          coins: 10,\n          power: 8,\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n        },\n        solad: {\n          name: \"Solad\",\n          id: HOUSE.SOLAD,\n          coins: 10,\n          power: 7,\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n        },\n        blodyn: {\n          name: \"Blodyn\",\n          id: HOUSE.BLODYN,\n          coins: 10,\n          power: 9,\n          current_bid: null,\n          current_vote_type: null,\n          top: '470px',\n          left: '95px',\n        },\n      }\n    }\n  ),\n\n  turn: {\n      moveLimit: 1,\n  },\n\n  /*\n  moves:\n  - voteAye\n  - increaseAye\n  - holdAye\n  - voteNay\n  - increaseNay\n  - holdNay\n  - votePassPower\n  - votePassModerator\n  - undo\n  */\n  moves: {\n    assignLeader: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.leader = G.houses[house].id;\n    },\n    assignModerator: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.moderator = G.houses[house].id;\n    },\n    addPower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      // TODO add max/min\n      G.houses[house].power = G.houses[house].power + 1;\n    },\n    removePower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].power = G.houses[house].power - 1;\n    },\n    addCoin: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].coins = G.houses[house].coins + 1;\n    },\n    removeCoin: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      G.houses[house].coins = G.houses[house].coins + 1;\n    },\n    voteAye: (G, ctx, house, bid) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(isNaN(bid) || bid < 0) {\n        return INVALID_MOVE;\n      }\n      if(G.houses[house].current_bid + bid > G.houses[house].power) {\n        return INVALID_MOVE;\n      }\n      // condition for \"passing\" after a bid\n      G.houses[house].current_vote_type = VOTE_TYPE.AYE;\n      G.houses[house].current_bid = G.houses[house].current_bid + bid;\n      let leader = G.houses[Object.keys(G.houses).find((key) => (G.houses[key].id === G.leader))];\n      if (G.houses[house].current_bid > leader.current_bid) {\n        G.leader = G.houses[house].id;\n      }\n      chooseNextPlayer(G, house);\n    },\n    voteNay: (G, ctx, house, bid) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(isNaN(bid) || bid < 0) {\n        return INVALID_MOVE;\n      }\n      if(G.houses[house].current_bid + bid > G.houses[house].power) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.NAY;\n      G.houses[house].current_bid = G.houses[house].current_bid + bid;\n      let leader = G.houses[Object.keys(G.houses).find((key) => (G.houses[key].id === G.leader))];\n      if (G.houses[house].current_bid > leader.current_bid) {\n        G.leader = G.houses[house].id;\n      }\n      chooseNextPlayer(G, house);\n      \n    },\n    passPower: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.PASS_POWER;\n      chooseNextPlayer(G, house, true);\n    },\n    passModerator: (G, ctx, house) => {\n      if(!G.houses[house]){\n        return INVALID_MOVE;\n      }\n      if(!(G.currentPlayer === G.houses[house].id)) {\n        return INVALID_MOVE;\n      }\n      if(!G.moderatorAvailable) {\n        return INVALID_MOVE;\n      }\n      G.houses[house].current_vote_type = VOTE_TYPE.PASS_MODERATOR;\n      G.moderator = G.houses[house].id;\n      G.moderatorAvailable = false;\n      chooseNextPlayer(G, house, true);\n    },\n    newVote: (G, ctx) => {\n      G.currentPlayer = G.leader;\n      let keys = Object.keys(G.houses);\n      for(let i = 0; i < keys.length; i++) {\n        G.houses[keys[i]].current_vote_type = null;\n        G.houses[keys[i]].current_bid = null;\n      }\n      G.moderatorAvailable = true;\n      G.turnOrder = turnOrder;\n    },\n    resolveAye: (G, ctx) => {\n      let keys = Object.keys(G.houses);\n      var numPassers = 0;\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n          numPassers = numPassers + 1;\n        }\n      }\n      const remainder = G.powerPool % numPassers;\n      if (remainder < G.powerPool) {\n        let share = (G.powerPool - remainder) / numPassers;\n        for(let i = 0; i < keys.length; i++) {\n          if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n            G.houses[keys[i]].power = G.houses[keys[i]].power + share;\n          }\n        }\n        G.powerPool = remainder;\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.AYE) {\n          G.powerPool = G.powerPool + G.houses[keys[i]].current_bid;\n          G.houses[keys[i]].power = G.houses[keys[i]].power - G.houses[keys[i]].current_bid;\n        }\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_MODERATOR || G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER ) {\n          G.houses[keys[i]].coins = G.houses[keys[i]].coins + 1;\n        }\n      }\n      // leader reassignment if leader is a nay -- do this manually?\n    },\n    resolveNay: (G, ctx) => {\n      let keys = Object.keys(G.houses);\n      var numPassers = 0;\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n          numPassers = numPassers + 1;\n        }\n      }\n      const remainder = G.powerPool % numPassers;\n      if (remainder < G.powerPool) {\n        let share = (G.powerPool - remainder) / numPassers;\n        for(let i = 0; i < keys.length; i++) {\n          if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER) {\n            G.houses[keys[i]].power = G.houses[keys[i]].power + share;\n          }\n        }\n        G.powerPool = remainder;\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.NAY) {\n          G.powerPool = G.powerPool + G.houses[keys[i]].current_bid;\n          G.houses[keys[i]].power = G.houses[keys[i]].power - G.houses[keys[i]].current_bid;\n        }\n      }\n      for(let i = 0; i < keys.length; i++) {\n        if (G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_MODERATOR || G.houses[keys[i]].current_vote_type === VOTE_TYPE.PASS_POWER ) {\n          G.houses[keys[i]].coins = G.houses[keys[i]].coins + 1;\n        }\n      }\n    },\n    changeURL: (G, ctx, url) => {\n      G.currentDilemma = url;\n    }\n  },\n\n  endIf: (G, ctx) => {\n    // no victory condition, we can just stop running the simulator\n    // if (IsVictory(G.cells)) {\n    //   return { winner: ctx.currentPlayer };\n    // }\n    // if (IsDraw(G.cells)) {\n    //   return { draw: true };\n    // }\n    // total agents, total incidents!!!\n  },\n};","import G from 'glob';\nimport React from 'react';\nimport { GiMeeple, GiOutbackHat, GiCaravan, GiTargeting, GiCancel, GiHouse } from \"react-icons/gi\";\n\n\nexport class DilemmaBoard extends React.Component {\n\n  action = null\n\n  setAction(action) {\n    this.action = action;\n  };\n\n  onClick(house) {\n    let move = this.action;\n    if (move === 'assignLeader') {\n      this.props.moves.assignLeader(house);\n    }\n    if (move === 'assignModerator') {\n      this.props.moves.assignModerator(house);\n    }\n    if (move === 'addPower') {\n      this.props.moves.addPower(house);\n    }\n    if (move === 'removePower') {\n      this.props.moves.removePower(house);\n    }\n    if (move === 'addCoin') {\n      this.props.moves.addCoin(house);\n    }\n    if (move === 'removeCoin') {\n      this.props.moves.removeCoin(house);\n    }\n    if (move === 'voteAye') {\n      let el = document.getElementById(house+'-bid');\n      let bid = parseInt(el?.value);\n      this.props.moves.voteAye(house, bid);\n    }\n    if (move === 'voteNay') {\n      let el = document.getElementById(house+'-bid');\n      let bid = parseInt(el?.value);\n      this.props.moves.voteNay(house, bid);\n    }\n    if (move === 'passPower') {\n      this.props.moves.passPower(house);\n    }\n    if (move === 'passModerator') {\n      this.props.moves.passModerator(house);\n    }\n    this.action = null;\n  }\n\n  render() {\n    let winner = '';\n    if (this.props.ctx.gameover) {\n      winner = \n        this.props.ctx.gameover.winner !== undefined ? (\n          <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n        ) : (\n          <div id=\"winner\">Draw!</div>\n        );\n    }\n\n    let div = [];\n    let houseNames = Object.keys(this.props.G.houses);\n\n    for (let i = 0; i < houseNames.length; i++) {\n      let myName = houseNames[i];\n      let voteDivs = [\n        // aye\n        <div>AYE: {this.props.G.houses[myName].current_bid}<br/>\n          <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>\n        </div>,\n        // nay\n        <div>NAY: {this.props.G.houses[myName].current_bid}<br/>\n          <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>\n        </div>,\n        // pass (power)\n        <div>PASS (POWER) </div>,\n        // pass (moderator)\n        <div>PASS (MODERATOR) </div>,\n      ];\n      div.push(\n        <div style={{\n          lineHeight: '14px',\n          textAlign: 'center',\n        }} key={myName} onClick={() => this.onClick(myName)}>\n          <table>\n            <tbody>\n              <tr style={{height:'120px'}}>\n              <td style={{width:'100px', border: '1px solid #555',}}>\n          Name: {myName} <br/>\n          Power: {this.props.G.houses[myName].power} <br/>\n          Coins: {this.props.G.houses[myName].coins} <br/>\n          {(this.props.G.leader === this.props.G.houses[myName].id) ? ('LEADER') : ('')} <br/>\n          {(this.props.G.moderator === this.props.G.houses[myName].id) ? 'MODERATOR' : ''} <br/>\n          {(this.props.G.currentPlayer === this.props.G.houses[myName].id) ? 'CURRENT PLAYER' : ''} <br/>\n          </td>\n          <td  style={{width:'150px'}}>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('voteAye')}>AYE</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('voteNay')}>NAY</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('passPower')}>PASS (POWER)</button><br/>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('passModerator')}>PASS (MODERATOR)</button><br/>\n          </td>\n          <td  style={{width:'100px', height:'50px', border: '1px solid #555',}}>\n            {this.props.G.houses[myName].current_vote_type ? voteDivs[this.props.G.houses[myName].current_vote_type - 1] : <span>Bid: <input style={{width:'15px'}} id={myName + '-bid'}></input></span>}\n          </td>\n              </tr>\n            </tbody>\n          </table>\n          \n        </div>\n      );\n    }\n\n    let actions = (<div style={{\n      border: '1px solid #555',\n      height: '50px',\n      lineHeight: '10px',\n      textAlign: 'center',\n      background: 'rgba(256, 256, 256, 0.65)',\n    }}>\n      <table >\n        <tbody >\n          <tr>\n            <td >      <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('assignLeader')}>ASSIGN LEADER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('addPower')}>ADD POWER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('addCoin')}>ADD COIN</button><br/>\n\n            </td>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.newVote()}>NEW VOTE</button><br/>\n            </td>\n            <td>\n            {(this.props.G.currentPhase === 2) ? <div>\n                <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.resolveAye()}>AYES HAVE IT</button><br/>\n              </div>\n              : ''\n              }\n            </td>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => {\nvar newURL = prompt(\"What image should be displayed?\", \"image URL goes here\");\n\nif (newURL != null) {\n  this.props.moves.changeURL(newURL)\n}\n              \n              }}>CHANGE IMAGE</button><br/>\n\n            \n            </td>\n          </tr>\n          <tr>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('assignModerator')}>ASSIGN MODERATOR</button><br/>\n            </td>\n            <td>\n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('removePower')}>REMOVE POWER</button><br/>\n\n            </td>\n            <td>     \n            <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.setAction('removeCoin')}>REMOVE COIN</button><br/>\n\n            </td>\n            <td>\n              {this.props.G.currentPhase === 1 ? 'Voting' : 'Vote Closed'}\n              \n            </td>\n            <td>\n            {(this.props.G.currentPhase === 2) ? <div>\n                <button style={{fontSize: '12px', width: '100%'}} onClick={() => this.props.moves.resolveNay()}>NAYS HAVE IT</button><br/>\n              </div>\n              : ''\n              }\n            </td>\n          </tr>\n          \n        </tbody>\n      </table>\n      \n    </div>);\n    //      <div style={{'width':'2074px','height':'1306px','backgroundImage':'url('+process.env.PUBLIC_URL+'/Dilemmamap.jpeg)'}}>\n\n    let card = <div style={{position:'absolute', top:'80px', left: '400px'}}><div>Current Power Pool: {this.props.G.powerPool}</div><img alt='' style={{width:'400px'}} src={this.props.G.currentDilemma}></img></div>\n\n    return (\n      <div>\n        {actions}\n        {div} \n        {card}       \n        {winner}\n      </div>\n    )\n  }\n}","import { Client } from 'boardgame.io/react';\nimport { Dilemma } from './Game';\nimport { DilemmaBoard } from './Board';\nimport { SocketIO } from 'boardgame.io/multiplayer'\n\nconst DilemmaClient = Client({ numPlayers: 1, game: Dilemma , board: DilemmaBoard, multiplayer: SocketIO({server: true ? 'https://pandemic-legacy0.herokuapp.com' : 'localhost:53954'})});\n\nconst App = () => (\n  <div>\n    <DilemmaClient playerID=\"0\" />\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}